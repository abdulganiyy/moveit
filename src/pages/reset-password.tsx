import Head from "next/head";
import Link from "next/link";
import { Inter } from "next/font/google";
import { MdOutlineKey } from "react-icons/md";
import { Formik, Form } from "formik";
import * as yup from "yup";

import AuthLayout from "@/components/layouts.tsx/AuthLayout";
import FormikInput from "@/components/inputs/FormikInput";
import Title from "@/components/typography/Title";
import P from "@/components/typography/P";
import Button from "@/components/buttons/Button";

import { useRouter } from "next/router";
import { toast } from "react-toastify";

import Axios from "axios";

const inter = Inter({ subsets: ["latin"] });

const validationSchema = yup.object({
  password: yup.string().required("Password is required"),
  confirmPassword: yup
    .string()
    .oneOf([yup.ref("password"), null], "Passwords must match"),
});

export default function Home() {
  const router = useRouter();

  console.log(router.query.email);
  return (
    <>
      <Head>
        <title>MOVE IT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AuthLayout>
        <div className="flex flex-col items-center pt-14 md:max-w-[388px] mx-auto">
          <div className="w-full mt-5 text-center md:text-right text-[16px] leading-[20px] text-[#080F50] font-normal">
            <Link href="/" className="">
              Already a member? <span className="text-[#098750]">Sign in</span>
            </Link>
          </div>
          <Formik
            initialValues={{ password: "", confirmPassword: "" }}
            validationSchema={validationSchema}
            onSubmit={async (values, submitProps) => {
              try {
                await Axios.post(
                  "/api/reset-password",
                  {
                    email: router.query.email,
                    password: values.password,
                  },
                  {
                    headers: {
                      Accept: "application/json",
                      "Content-Type": "application/json",
                    },
                  }
                );

                toast("Password has been reset successfully", {
                  hideProgressBar: true,
                  autoClose: 2000,
                  type: "success",
                });
              } catch (error) {
                // console.log(error);
                toast(error.response.data.message, {
                  hideProgressBar: true,
                  autoClose: 2000,
                  type: "error",
                });
              } finally {
                submitProps.setSubmitting(false);
                submitProps.resetForm();
              }
            }}
          >
            {(formik) => {
              return (
                <Form>
                  <div className="flex flex-col justify-center items-center gap-y-[22px]">
                    <div className="text-center">
                      <Title>Reset Password </Title>
                    </div>
                    {/* <div className="max-w-[447px] text-center">
                      <P>
                        Oops, this can happen to anybody, dont worry we will
                        help you sort this out easily.
                      </P>
                    </div> */}
                  </div>
                  <div className="mt-10 flex flex-col gap-y-[22px]">
                    <div>
                      <FormikInput
                        type="password"
                        name="password"
                        direction="left"
                        icon={<MdOutlineKey color="#098750" />}
                        placeholder="Enter Password"
                      />
                    </div>
                    <div>
                      <FormikInput
                        type="password"
                        name="confirmPassword"
                        direction="left"
                        icon={<MdOutlineKey color="#098750" />}
                        placeholder="Confirm Password"
                      />
                    </div>
                  </div>
                  <div className="mt-5">
                    <Button
                      type="submit"
                      isLoading={formik.isSubmitting}
                      disabled={!formik.isValid || formik.isSubmitting}
                    >
                      Submit
                    </Button>
                  </div>
                </Form>
              );
            }}
          </Formik>
        </div>
      </AuthLayout>
    </>
  );
}
